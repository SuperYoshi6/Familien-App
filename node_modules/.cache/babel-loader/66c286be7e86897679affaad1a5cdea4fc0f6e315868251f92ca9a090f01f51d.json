{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jan\\\\Downloads\\\\Familien App\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNotifications } from './useNotifications';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  user\n}) {\n  _s();\n  const {\n    sendNotification\n  } = useNotifications();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  const fetchMessages = useCallback(async () => {\n    setLoading(true);\n    const {\n      data,\n      error\n    } = await supabase.from('chat_messages').select('*, user:users(name)').order('created_at', {\n      ascending: true\n    });\n    if (error) {\n      setError('Fehler beim Laden der Nachrichten.');\n      setMessages([]);\n    } else {\n      setMessages(data);\n      scrollToBottom();\n    }\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMessages();\n    const channel = supabase.channel('chat_messages').on('postgres_changes', {\n      event: 'INSERT',\n      schema: 'public',\n      table: 'chat_messages'\n    }, payload => {\n      const newMessage = payload.new;\n      if (newMessage.user_id !== user.id) {\n        sendNotification(`Neue Nachricht von ${newMessage.user.name}`, {\n          body: newMessage.content\n        });\n      }\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n      scrollToBottom();\n    }).subscribe();\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, [fetchMessages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    const {\n      error\n    } = await supabase.from('chat_messages').insert([{\n      content: newMessage,\n      user_id: user.id\n    }]);\n    if (error) {\n      setError('Fehler beim Senden der Nachricht.');\n    } else {\n      setNewMessage('');\n    }\n  };\n  const formatMessage = text => {\n    // Replace @mentions with styled spans\n    let formattedText = text.replace(/@(\\w+)/g, '<span class=\"mention\">@$1</span>');\n    // Replace #tabs with styled links (without actual navigation)\n    formattedText = formattedText.replace(/#(\\w+)/g, '<span class=\"tab-link\">#$1</span>');\n    return formattedText;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Lade Nachrichten...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }, this), messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.user_id === user.id ? 'sent' : 'received'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-bubble\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: msg.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            dangerouslySetInnerHTML: {\n              __html: formatMessage(msg.content)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timestamp\",\n            children: new Date(msg.created_at).toLocaleTimeString('de-DE', {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      className: \"message-input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Nachricht schreiben...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Senden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"TG6OZR3C6+a4zwRCTkeLjS5BMW8=\", false, function () {\n  return [useNotifications];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","supabase","useNotifications","jsxDEV","_jsxDEV","Chat","user","_s","sendNotification","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchMessages","data","from","select","order","ascending","channel","on","event","schema","table","payload","new","user_id","id","name","body","content","prevMessages","subscribe","removeChannel","handleSendMessage","e","preventDefault","trim","insert","formatMessage","text","formattedText","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","dangerouslySetInnerHTML","__html","Date","created_at","toLocaleTimeString","hour","minute","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Jan/Downloads/Familien App/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNotifications } from './useNotifications';\nimport './Chat.css';\n\nexport default function Chat({ user }) {\n  const { sendNotification } = useNotifications();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  const fetchMessages = useCallback(async () => {\n    setLoading(true);\n    const { data, error } = await supabase\n      .from('chat_messages')\n      .select('*, user:users(name)')\n      .order('created_at', { ascending: true });\n\n    if (error) {\n      setError('Fehler beim Laden der Nachrichten.');\n      setMessages([]);\n    } else {\n      setMessages(data);\n      scrollToBottom();\n    }\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    const channel = supabase.channel('chat_messages')\n      .on('postgres_changes', { event: 'INSERT', schema: 'public', table: 'chat_messages' }, payload => {\n        const newMessage = payload.new;\n        if (newMessage.user_id !== user.id) {\n          sendNotification(`Neue Nachricht von ${newMessage.user.name}`, {\n            body: newMessage.content,\n          });\n        }\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n        scrollToBottom();\n      })\n      .subscribe();\n\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, [fetchMessages]);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    const { error } = await supabase.from('chat_messages').insert([\n      { content: newMessage, user_id: user.id }\n    ]);\n\n    if (error) {\n      setError('Fehler beim Senden der Nachricht.');\n    } else {\n      setNewMessage('');\n    }\n  };\n\n  const formatMessage = (text) => {\n    // Replace @mentions with styled spans\n    let formattedText = text.replace(/@(\\w+)/g, '<span class=\"mention\">@$1</span>');\n    // Replace #tabs with styled links (without actual navigation)\n    formattedText = formattedText.replace(/#(\\w+)/g, '<span class=\"tab-link\">#$1</span>');\n    return formattedText;\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"message-list\">\n        {loading && <p>Lade Nachrichten...</p>}\n        {error && <p className=\"error-message\">{error}</p>}\n        {messages.map(msg => (\n          <div key={msg.id} className={`message ${msg.user_id === user.id ? 'sent' : 'received'}`}>\n            <div className=\"message-bubble\">\n              <span className=\"user-name\">{msg.user.name}</span>\n              <p dangerouslySetInnerHTML={{ __html: formatMessage(msg.content) }}></p>\n              <span className=\"timestamp\">{new Date(msg.created_at).toLocaleTimeString('de-DE', { hour: '2-digit', minute: '2-digit' })}</span>\n            </div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      <form onSubmit={handleSendMessage} className=\"message-input-form\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Nachricht schreiben...\"\n        />\n        <button type=\"submit\">Senden</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}