{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jan\\\\Downloads\\\\Familien App\\\\src\\\\ShoppingList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { supabase } from './supabaseClient';\nimport './ShoppingList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORIES = ['Lebensmittel', 'Haushalt', 'Drogerie', 'Sonstiges'];\nexport default function ShoppingList({\n  user\n}) {\n  _s();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [form, setForm] = useState({\n    item: '',\n    quantity: '',\n    category: CATEGORIES[0]\n  });\n  const [error, setError] = useState(null);\n  const fetchItems = useCallback(async () => {\n    setLoading(true);\n    const {\n      data,\n      error\n    } = await supabase.from('shopping_list').select('*').order('created_at', {\n      ascending: true\n    });\n    if (error) {\n      setError('Fehler beim Laden der Einkaufsliste.');\n      setItems([]);\n    } else {\n      setItems(data);\n    }\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchItems();\n    const channel = supabase.channel('shopping_list').on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'shopping_list'\n    }, payload => {\n      fetchItems(); // Bei jeder Änderung neu laden\n    }).subscribe();\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, [fetchItems]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAddItem = async e => {\n    e.preventDefault();\n    if (!form.item) return;\n    const {\n      error\n    } = await supabase.from('shopping_list').insert([{\n      item: form.item,\n      quantity: form.quantity || null,\n      created_by: user.name,\n      category: form.category\n    }]);\n    if (error) {\n      setError('Fehler beim Hinzufügen des Artikels.');\n    } else {\n      setForm({\n        item: '',\n        quantity: '',\n        category: form.category\n      });\n      setError(null);\n    }\n  };\n  const toggleItemDone = async (id, currentState) => {\n    await supabase.from('shopping_list').update({\n      is_done: !currentState\n    }).eq('id', id);\n  };\n  const deleteItem = async id => {\n    await supabase.from('shopping_list').delete().eq('id', id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shopping-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Digitaler Einkaufszettel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddItem,\n      className: \"add-item-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"item\",\n        placeholder: \"Was wird ben\\xF6tigt?\",\n        value: form.item,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"quantity\",\n        placeholder: \"Menge (z.B. 1kg)\",\n        value: form.quantity,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"category\",\n        value: form.category,\n        onChange: handleInputChange,\n        children: CATEGORIES.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat,\n          children: cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Hinzuf\\xFCgen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Lade Liste...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Offen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), CATEGORIES.map(category => {\n        const openItems = items.filter(it => !it.is_done && it.category === category);\n        if (openItems.length === 0) return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: openItems.map(it => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-details\",\n                onClick: () => toggleItemDone(it.id, it.is_done),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: it.is_done,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"item-name\",\n                  children: it.item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 25\n                }, this), it.quantity && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"item-quantity\",\n                  children: [\"(\", it.quantity, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteItem(it.id),\n                className: \"delete-button\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 23\n              }, this)]\n            }, it.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"done-header\",\n        children: \"Erledigt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), items.filter(it => it.is_done).length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-list\",\n        children: \"Noch nichts eingekauft.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 59\n      }, this), items.filter(it => it.is_done).map(it => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item done\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-details\",\n          onClick: () => toggleItemDone(it.id, it.is_done),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: it.is_done,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"item-name\",\n            children: it.item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), it.quantity && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"item-quantity\",\n            children: [\"(\", it.quantity, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteItem(it.id),\n          className: \"delete-button\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)]\n      }, it.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(ShoppingList, \"WxgrgZjuGiGMmYq6GKYK4uXcKGI=\");\n_c = ShoppingList;\nvar _c;\n$RefreshReg$(_c, \"ShoppingList\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","supabase","jsxDEV","_jsxDEV","CATEGORIES","ShoppingList","user","_s","items","setItems","loading","setLoading","form","setForm","item","quantity","category","error","setError","fetchItems","data","from","select","order","ascending","channel","on","event","schema","table","payload","subscribe","removeChannel","handleInputChange","e","name","value","target","prev","handleAddItem","preventDefault","insert","created_by","toggleItemDone","id","currentState","update","is_done","eq","deleteItem","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","map","cat","openItems","filter","it","length","onClick","checked","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/Jan/Downloads/Familien App/src/ShoppingList.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { supabase } from './supabaseClient';\nimport './ShoppingList.css';\n\nconst CATEGORIES = ['Lebensmittel', 'Haushalt', 'Drogerie', 'Sonstiges'];\n\nexport default function ShoppingList({ user }) {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [form, setForm] = useState({ item: '', quantity: '', category: CATEGORIES[0] });\n  const [error, setError] = useState(null);\n\n  const fetchItems = useCallback(async () => {\n    setLoading(true);\n    const { data, error } = await supabase\n      .from('shopping_list')\n      .select('*')\n      .order('created_at', { ascending: true });\n\n    if (error) {\n      setError('Fehler beim Laden der Einkaufsliste.');\n      setItems([]);\n    } else {\n      setItems(data);\n    }\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchItems();\n\n    const channel = supabase.channel('shopping_list')\n      .on('postgres_changes', { event: '*', schema: 'public', table: 'shopping_list' }, payload => {\n        fetchItems(); // Bei jeder Änderung neu laden\n      })\n      .subscribe();\n\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, [fetchItems]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setForm(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleAddItem = async (e) => {\n    e.preventDefault();\n    if (!form.item) return;\n\n    const { error } = await supabase.from('shopping_list').insert([\n      {\n        item: form.item,\n        quantity: form.quantity || null,\n        created_by: user.name,\n        category: form.category,\n      }\n    ]);\n\n    if (error) {\n      setError('Fehler beim Hinzufügen des Artikels.');\n    } else {\n      setForm({ item: '', quantity: '', category: form.category });\n      setError(null);\n    }\n  };\n\n  const toggleItemDone = async (id, currentState) => {\n    await supabase\n      .from('shopping_list')\n      .update({ is_done: !currentState })\n      .eq('id', id);\n  };\n\n  const deleteItem = async (id) => {\n    await supabase\n      .from('shopping_list')\n      .delete()\n      .eq('id', id);\n  };\n\n  return (\n    <div className=\"shopping-list-container\">\n      <h2>Digitaler Einkaufszettel</h2>\n      <form onSubmit={handleAddItem} className=\"add-item-form\">\n        <input\n          type=\"text\"\n          name=\"item\"\n          placeholder=\"Was wird benötigt?\"\n          value={form.item}\n          onChange={handleInputChange}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"quantity\"\n          placeholder=\"Menge (z.B. 1kg)\"\n          value={form.quantity}\n          onChange={handleInputChange}\n        />\n        <select name=\"category\" value={form.category} onChange={handleInputChange}>\n          {CATEGORIES.map(cat => <option key={cat} value={cat}>{cat}</option>)}\n        </select>\n        <button type=\"submit\">Hinzufügen</button>\n      </form>\n\n      {error && <p className=\"error-message\">{error}</p>}\n\n      {loading ? (\n        <p>Lade Liste...</p>\n      ) : (\n        <div className=\"item-list\">\n          <h3>Offen</h3>\n          {CATEGORIES.map(category => {\n            const openItems = items.filter(it => !it.is_done && it.category === category);\n            if (openItems.length === 0) return null;\n            return (\n              <div key={category} className=\"category-section\">\n                <h4>{category}</h4>\n                <ul>\n                  {openItems.map(it => (\n                    <li key={it.id} className=\"item\">\n                      <div className=\"item-details\" onClick={() => toggleItemDone(it.id, it.is_done)}>\n                        <input type=\"checkbox\" checked={it.is_done} readOnly />\n                        <span className=\"item-name\">{it.item}</span>\n                        {it.quantity && <span className=\"item-quantity\">({it.quantity})</span>}\n                      </div>\n                      <button onClick={() => deleteItem(it.id)} className=\"delete-button\">×</button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            );\n          })}\n\n          <h3 className=\"done-header\">Erledigt</h3>\n          {items.filter(it => it.is_done).length === 0 && <p className=\"empty-list\">Noch nichts eingekauft.</p>}\n          {items.filter(it => it.is_done).map(it => (\n            <li key={it.id} className=\"item done\">\n              <div className=\"item-details\" onClick={() => toggleItemDone(it.id, it.is_done)}>\n                <input type=\"checkbox\" checked={it.is_done} readOnly />\n                <span className=\"item-name\">{it.item}</span>\n                {it.quantity && <span className=\"item-quantity\">({it.quantity})</span>}\n              </div>\n              <button onClick={() => deleteItem(it.id)} className=\"delete-button\">×</button>\n            </li>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}