{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jan\\\\Downloads\\\\Familien App\\\\src\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './Weather.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = '24361fb4ffda79fd4239dc33a5697d7c';\nconst Weather = () => {\n  _s();\n  const [location, setLocation] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [cards, setCards] = useState(JSON.parse(localStorage.getItem('weather_cards')) || [{\n    id: 'main',\n    order: 0,\n    content: null\n  }, {\n    id: 'hourly',\n    order: 1,\n    content: null\n  }, {\n    id: 'details',\n    order: 2,\n    content: null\n  }, {\n    id: 'daily',\n    order: 3,\n    content: null\n  }]);\n  const fetchWeatherData = useCallback(async (lat, lon) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const weatherResponse = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric&lang=de`);\n      if (!weatherResponse.ok) throw new Error('Wetterdaten konnten nicht geladen werden.');\n      const current = await weatherResponse.json();\n      setWeatherData(current);\n      const forecastResponse = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric&lang=de`);\n      if (!forecastResponse.ok) throw new Error('Vorhersagedaten konnten nicht geladen werden.');\n      const forecast = await forecastResponse.json();\n      setForecastData(forecast);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setLocation({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude\n        });\n      }, error => {\n        setError('Standort konnte nicht abgerufen werden. Bitte erlaube den Zugriff.');\n        // Fallback to a default city if location is denied\n        fetchWeatherData(49.74, 8.11); // Alzey coordinates\n      });\n    } else {\n      setError('Geolokalisierung wird von diesem Browser nicht unterstÃ¼tzt.');\n      fetchWeatherData(49.74, 8.11); // Alzey coordinates\n    }\n  }, [fetchWeatherData]);\n  useEffect(() => {\n    if (location) {\n      fetchWeatherData(location.lat, location.lon);\n    }\n  }, [location, fetchWeatherData]);\n  const getIconUrl = icon => `http://openweathermap.org/img/wn/${icon}@2x.png`;\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const items = Array.from(cards);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    const updatedCards = items.map((item, index) => ({\n      ...item,\n      order: index\n    }));\n    setCards(updatedCards);\n    localStorage.setItem('weather_cards', JSON.stringify(updatedCards));\n  };\n  const renderCardContent = cardId => {\n    switch (cardId) {\n      case 'main':\n        return weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: weatherData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"temperature\",\n            children: [Math.round(weatherData.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-weather-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: getIconUrl(weatherData.weather[0].icon),\n              alt: weatherData.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: weatherData.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Gef\\xFChlt wie: \", Math.round(weatherData.main.feels_like), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Max: \", Math.round(weatherData.main.temp_max), \"\\xB0C / Min: \", Math.round(weatherData.main.temp_min), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'hourly':\n        return forecastData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"St\\xFCndliche Vorhersage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hourly-items\",\n            children: forecastData.list.slice(0, 8).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hourly-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [new Date(item.dt * 1000).getHours(), \":00\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: getIconUrl(item.weather[0].icon),\n                alt: item.weather[0].description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [Math.round(item.main.temp), \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'details':\n        return weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Luftfeuchtigkeit: \", weatherData.main.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind: \", weatherData.wind.speed, \" m/s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Luftdruck: \", weatherData.main.pressure, \" hPa\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'daily':\n        return forecastData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"5-Tage-Vorschau\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"daily-items\",\n            children: Object.entries(forecastData.list.reduce((acc, item) => {\n              const date = new Date(item.dt * 1000).toLocaleDateString('de-DE', {\n                weekday: 'short'\n              });\n              if (!acc[date]) acc[date] = {\n                temps: [],\n                icons: []\n              };\n              acc[date].temps.push(item.main.temp);\n              acc[date].icons.push(item.weather[0].icon);\n              return acc;\n            }, {})).map(([day, data], index) => {\n              const minTemp = Math.round(Math.min(...data.temps));\n              const maxTemp = Math.round(Math.max(...data.temps));\n              const icon = data.icons[Math.floor(data.icons.length / 2)] || data.icons[0];\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"daily-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: day\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: getIconUrl(icon),\n                  alt: \"weather icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"temp-range\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [maxTemp, \"\\xB0\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [minTemp, \"\\xB0\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Wetter wird geladen...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }, this), !loading && !error && weatherData && /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"weather-cards\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: \"weather-grid\",\n          children: [cards.sort((a, b) => a.order - b.order).map((card, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: card.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              className: `weather-card ${card.id === 'main' ? 'main-weather' : ''}`,\n              children: renderCardContent(card.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 23\n            }, this)\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 19\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"aeMBQQ5a3dyCbTgtLPwHADqfzgQ=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","Weather","_s","location","setLocation","weatherData","setWeatherData","forecastData","setForecastData","loading","setLoading","error","setError","cards","setCards","JSON","parse","localStorage","getItem","id","order","content","fetchWeatherData","lat","lon","weatherResponse","fetch","ok","Error","current","json","forecastResponse","forecast","err","message","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getIconUrl","icon","onDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","updatedCards","map","item","setItem","stringify","renderCardContent","cardId","children","name","fileName","_jsxFileName","lineNumber","columnNumber","className","Math","round","main","temp","src","weather","alt","description","feels_like","temp_max","temp_min","list","slice","Date","dt","getHours","humidity","wind","speed","pressure","Object","entries","reduce","acc","date","toLocaleDateString","weekday","temps","icons","push","day","data","minTemp","min","maxTemp","max","floor","length","droppableId","provided","droppableProps","ref","innerRef","sort","a","b","card","draggableId","draggableProps","dragHandleProps","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Jan/Downloads/Familien App/src/Weather.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './Weather.css';\n\nconst API_KEY = '24361fb4ffda79fd4239dc33a5697d7c';\n\nconst Weather = () => {\n  const [location, setLocation] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [cards, setCards] = useState(JSON.parse(localStorage.getItem('weather_cards')) || [\n    { id: 'main', order: 0, content: null },\n    { id: 'hourly', order: 1, content: null },\n    { id: 'details', order: 2, content: null },\n    { id: 'daily', order: 3, content: null },\n  ]);\n\n  const fetchWeatherData = useCallback(async (lat, lon) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const weatherResponse = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric&lang=de`);\n      if (!weatherResponse.ok) throw new Error('Wetterdaten konnten nicht geladen werden.');\n      const current = await weatherResponse.json();\n      setWeatherData(current);\n\n      const forecastResponse = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric&lang=de`);\n      if (!forecastResponse.ok) throw new Error('Vorhersagedaten konnten nicht geladen werden.');\n      const forecast = await forecastResponse.json();\n      setForecastData(forecast);\n\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setLocation({ \n            lat: position.coords.latitude, \n            lon: position.coords.longitude \n          });\n        },\n        (error) => {\n          setError('Standort konnte nicht abgerufen werden. Bitte erlaube den Zugriff.');\n          // Fallback to a default city if location is denied\n          fetchWeatherData(49.74, 8.11); // Alzey coordinates\n        }\n      );\n    } else {\n      setError('Geolokalisierung wird von diesem Browser nicht unterstÃ¼tzt.');\n      fetchWeatherData(49.74, 8.11); // Alzey coordinates\n    }\n  }, [fetchWeatherData]);\n\n  useEffect(() => {\n    if (location) {\n      fetchWeatherData(location.lat, location.lon);\n    }\n  }, [location, fetchWeatherData]);\n\n  const getIconUrl = (icon) => `http://openweathermap.org/img/wn/${icon}@2x.png`;\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n    const items = Array.from(cards);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    \n    const updatedCards = items.map((item, index) => ({ ...item, order: index }));\n    setCards(updatedCards);\n    localStorage.setItem('weather_cards', JSON.stringify(updatedCards));\n  };\n\n  const renderCardContent = (cardId) => {\n    switch (cardId) {\n      case 'main':\n        return weatherData && (\n          <>\n            <h2>{weatherData.name}</h2>\n            <p className=\"temperature\">{Math.round(weatherData.main.temp)}Â°C</p>\n            <div className=\"main-weather-details\">\n              <img src={getIconUrl(weatherData.weather[0].icon)} alt={weatherData.weather[0].description} />\n              <p>{weatherData.weather[0].description}</p>\n            </div>\n            <p>GefÃ¼hlt wie: {Math.round(weatherData.main.feels_like)}Â°C</p>\n            <p>Max: {Math.round(weatherData.main.temp_max)}Â°C / Min: {Math.round(weatherData.main.temp_min)}Â°C</p>\n          </>\n        );\n      case 'hourly':\n        return forecastData && (\n          <>\n            <h3>StÃ¼ndliche Vorhersage</h3>\n            <div className=\"hourly-items\">\n              {forecastData.list.slice(0, 8).map((item, index) => (\n                <div key={index} className=\"hourly-item\">\n                  <span>{new Date(item.dt * 1000).getHours()}:00</span>\n                  <img src={getIconUrl(item.weather[0].icon)} alt={item.weather[0].description} />\n                  <span>{Math.round(item.main.temp)}Â°C</span>\n                </div>\n              ))}\n            </div>\n          </>\n        );\n      case 'details':\n        return weatherData && (\n          <>\n            <h3>Details</h3>\n            <p>Luftfeuchtigkeit: {weatherData.main.humidity}%</p>\n            <p>Wind: {weatherData.wind.speed} m/s</p>\n            <p>Luftdruck: {weatherData.main.pressure} hPa</p>\n          </>\n        );\n      case 'daily':\n        return forecastData && (\n          <>\n            <h3>5-Tage-Vorschau</h3>\n            <div className=\"daily-items\">\n              {Object.entries(forecastData.list.reduce((acc, item) => {\n                const date = new Date(item.dt * 1000).toLocaleDateString('de-DE', { weekday: 'short' });\n                if (!acc[date]) acc[date] = { temps: [], icons: [] };\n                acc[date].temps.push(item.main.temp);\n                acc[date].icons.push(item.weather[0].icon);\n                return acc;\n              }, {})).map(([day, data], index) => {\n                const minTemp = Math.round(Math.min(...data.temps));\n                const maxTemp = Math.round(Math.max(...data.temps));\n                const icon = data.icons[Math.floor(data.icons.length / 2)] || data.icons[0];\n                return (\n                  <div key={index} className=\"daily-item\">\n                    <span>{day}</span>\n                    <img src={getIconUrl(icon)} alt=\"weather icon\" />\n                    <div className=\"temp-range\"><span>{maxTemp}Â°</span><span>{minTemp}Â°</span></div>\n                  </div>\n                );\n              })}\n            </div>\n          </>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"weather-container\">\n      {loading && <p>Wetter wird geladen...</p>}\n      {error && <p className=\"error-message\">{error}</p>}\n      {!loading && !error && weatherData && (\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"weather-cards\">\n            {(provided) => (\n              <div {...provided.droppableProps} ref={provided.innerRef} className=\"weather-grid\">\n                {cards.sort((a, b) => a.order - b.order).map((card, index) => (\n                  <Draggable key={card.id} draggableId={card.id} index={index}>\n                    {(provided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        className={`weather-card ${card.id === 'main' ? 'main-weather' : ''}`}\n                      >\n                        {renderCardContent(card.id)}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      )}\n    </div>\n  );\n};\n\nexport default Weather;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvB,MAAMC,OAAO,GAAG,kCAAkC;AAElD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAACyB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CACtF;IAAEC,EAAE,EAAE,MAAM;IAAEC,KAAK,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAK,CAAC,EACvC;IAAEF,EAAE,EAAE,QAAQ;IAAEC,KAAK,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAK,CAAC,EACzC;IAAEF,EAAE,EAAE,SAAS;IAAEC,KAAK,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAK,CAAC,EAC1C;IAAEF,EAAE,EAAE,OAAO;IAAEC,KAAK,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAK,CAAC,CACzC,CAAC;EAEF,MAAMC,gBAAgB,GAAG9B,WAAW,CAAC,OAAO+B,GAAG,EAAEC,GAAG,KAAK;IACvDd,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMa,eAAe,GAAG,MAAMC,KAAK,CAAC,uDAAuDH,GAAG,QAAQC,GAAG,UAAUxB,OAAO,uBAAuB,CAAC;MAClJ,IAAI,CAACyB,eAAe,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;MACrF,MAAMC,OAAO,GAAG,MAAMJ,eAAe,CAACK,IAAI,CAAC,CAAC;MAC5CxB,cAAc,CAACuB,OAAO,CAAC;MAEvB,MAAME,gBAAgB,GAAG,MAAML,KAAK,CAAC,wDAAwDH,GAAG,QAAQC,GAAG,UAAUxB,OAAO,uBAAuB,CAAC;MACpJ,IAAI,CAAC+B,gBAAgB,CAACJ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;MAC1F,MAAMI,QAAQ,GAAG,MAAMD,gBAAgB,CAACD,IAAI,CAAC,CAAC;MAC9CtB,eAAe,CAACwB,QAAQ,CAAC;IAE3B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZrB,QAAQ,CAACqB,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRxB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACd,IAAI4C,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;QACZlC,WAAW,CAAC;UACVmB,GAAG,EAAEe,QAAQ,CAACC,MAAM,CAACC,QAAQ;UAC7BhB,GAAG,EAAEc,QAAQ,CAACC,MAAM,CAACE;QACvB,CAAC,CAAC;MACJ,CAAC,EACA9B,KAAK,IAAK;QACTC,QAAQ,CAAC,oEAAoE,CAAC;QAC9E;QACAU,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;MACjC,CACF,CAAC;IACH,CAAC,MAAM;MACLV,QAAQ,CAAC,6DAA6D,CAAC;MACvEU,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtB/B,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,EAAE;MACZmB,gBAAgB,CAACnB,QAAQ,CAACoB,GAAG,EAAEpB,QAAQ,CAACqB,GAAG,CAAC;IAC9C;EACF,CAAC,EAAE,CAACrB,QAAQ,EAAEmB,gBAAgB,CAAC,CAAC;EAEhC,MAAMoB,UAAU,GAAIC,IAAI,IAAK,oCAAoCA,IAAI,SAAS;EAE9E,MAAMC,SAAS,GAAIC,MAAM,IAAK;IAC5B,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;IACzB,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACpC,KAAK,CAAC;IAC/B,MAAM,CAACqC,aAAa,CAAC,GAAGH,KAAK,CAACI,MAAM,CAACN,MAAM,CAACO,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;IAC5DN,KAAK,CAACI,MAAM,CAACN,MAAM,CAACC,WAAW,CAACO,KAAK,EAAE,CAAC,EAAEH,aAAa,CAAC;IAExD,MAAMI,YAAY,GAAGP,KAAK,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEH,KAAK,MAAM;MAAE,GAAGG,IAAI;MAAEpC,KAAK,EAAEiC;IAAM,CAAC,CAAC,CAAC;IAC5EvC,QAAQ,CAACwC,YAAY,CAAC;IACtBrC,YAAY,CAACwC,OAAO,CAAC,eAAe,EAAE1C,IAAI,CAAC2C,SAAS,CAACJ,YAAY,CAAC,CAAC;EACrE,CAAC;EAED,MAAMK,iBAAiB,GAAIC,MAAM,IAAK;IACpC,QAAQA,MAAM;MACZ,KAAK,MAAM;QACT,OAAOvD,WAAW,iBAChBR,OAAA,CAAAE,SAAA;UAAA8D,QAAA,gBACEhE,OAAA;YAAAgE,QAAA,EAAKxD,WAAW,CAACyD;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3BrE,OAAA;YAAGsE,SAAS,EAAC,aAAa;YAAAN,QAAA,GAAEO,IAAI,CAACC,KAAK,CAAChE,WAAW,CAACiE,IAAI,CAACC,IAAI,CAAC,EAAC,OAAE;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACpErE,OAAA;YAAKsE,SAAS,EAAC,sBAAsB;YAAAN,QAAA,gBACnChE,OAAA;cAAK2E,GAAG,EAAE9B,UAAU,CAACrC,WAAW,CAACoE,OAAO,CAAC,CAAC,CAAC,CAAC9B,IAAI,CAAE;cAAC+B,GAAG,EAAErE,WAAW,CAACoE,OAAO,CAAC,CAAC,CAAC,CAACE;YAAY;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC9FrE,OAAA;cAAAgE,QAAA,EAAIxD,WAAW,CAACoE,OAAO,CAAC,CAAC,CAAC,CAACE;YAAW;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eACNrE,OAAA;YAAAgE,QAAA,GAAG,kBAAa,EAACO,IAAI,CAACC,KAAK,CAAChE,WAAW,CAACiE,IAAI,CAACM,UAAU,CAAC,EAAC,OAAE;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC/DrE,OAAA;YAAAgE,QAAA,GAAG,OAAK,EAACO,IAAI,CAACC,KAAK,CAAChE,WAAW,CAACiE,IAAI,CAACO,QAAQ,CAAC,EAAC,eAAU,EAACT,IAAI,CAACC,KAAK,CAAChE,WAAW,CAACiE,IAAI,CAACQ,QAAQ,CAAC,EAAC,OAAE;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,eACtG,CACH;MACH,KAAK,QAAQ;QACX,OAAO3D,YAAY,iBACjBV,OAAA,CAAAE,SAAA;UAAA8D,QAAA,gBACEhE,OAAA;YAAAgE,QAAA,EAAI;UAAqB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9BrE,OAAA;YAAKsE,SAAS,EAAC,cAAc;YAAAN,QAAA,EAC1BtD,YAAY,CAACwE,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACzB,GAAG,CAAC,CAACC,IAAI,EAAEH,KAAK,kBAC7CxD,OAAA;cAAiBsE,SAAS,EAAC,aAAa;cAAAN,QAAA,gBACtChE,OAAA;gBAAAgE,QAAA,GAAO,IAAIoB,IAAI,CAACzB,IAAI,CAAC0B,EAAE,GAAG,IAAI,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAC,KAAG;cAAA;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACrDrE,OAAA;gBAAK2E,GAAG,EAAE9B,UAAU,CAACc,IAAI,CAACiB,OAAO,CAAC,CAAC,CAAC,CAAC9B,IAAI,CAAE;gBAAC+B,GAAG,EAAElB,IAAI,CAACiB,OAAO,CAAC,CAAC,CAAC,CAACE;cAAY;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAChFrE,OAAA;gBAAAgE,QAAA,GAAOO,IAAI,CAACC,KAAK,CAACb,IAAI,CAACc,IAAI,CAACC,IAAI,CAAC,EAAC,OAAE;cAAA;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA,GAHnCb,KAAK;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,eACN,CACH;MACH,KAAK,SAAS;QACZ,OAAO7D,WAAW,iBAChBR,OAAA,CAAAE,SAAA;UAAA8D,QAAA,gBACEhE,OAAA;YAAAgE,QAAA,EAAI;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBrE,OAAA;YAAAgE,QAAA,GAAG,oBAAkB,EAACxD,WAAW,CAACiE,IAAI,CAACc,QAAQ,EAAC,GAAC;UAAA;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACrDrE,OAAA;YAAAgE,QAAA,GAAG,QAAM,EAACxD,WAAW,CAACgF,IAAI,CAACC,KAAK,EAAC,MAAI;UAAA;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACzCrE,OAAA;YAAAgE,QAAA,GAAG,aAAW,EAACxD,WAAW,CAACiE,IAAI,CAACiB,QAAQ,EAAC,MAAI;UAAA;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,eACjD,CACH;MACH,KAAK,OAAO;QACV,OAAO3D,YAAY,iBACjBV,OAAA,CAAAE,SAAA;UAAA8D,QAAA,gBACEhE,OAAA;YAAAgE,QAAA,EAAI;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBrE,OAAA;YAAKsE,SAAS,EAAC,aAAa;YAAAN,QAAA,EACzB2B,MAAM,CAACC,OAAO,CAAClF,YAAY,CAACwE,IAAI,CAACW,MAAM,CAAC,CAACC,GAAG,EAAEnC,IAAI,KAAK;cACtD,MAAMoC,IAAI,GAAG,IAAIX,IAAI,CAACzB,IAAI,CAAC0B,EAAE,GAAG,IAAI,CAAC,CAACW,kBAAkB,CAAC,OAAO,EAAE;gBAAEC,OAAO,EAAE;cAAQ,CAAC,CAAC;cACvF,IAAI,CAACH,GAAG,CAACC,IAAI,CAAC,EAAED,GAAG,CAACC,IAAI,CAAC,GAAG;gBAAEG,KAAK,EAAE,EAAE;gBAAEC,KAAK,EAAE;cAAG,CAAC;cACpDL,GAAG,CAACC,IAAI,CAAC,CAACG,KAAK,CAACE,IAAI,CAACzC,IAAI,CAACc,IAAI,CAACC,IAAI,CAAC;cACpCoB,GAAG,CAACC,IAAI,CAAC,CAACI,KAAK,CAACC,IAAI,CAACzC,IAAI,CAACiB,OAAO,CAAC,CAAC,CAAC,CAAC9B,IAAI,CAAC;cAC1C,OAAOgD,GAAG;YACZ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAACpC,GAAG,CAAC,CAAC,CAAC2C,GAAG,EAAEC,IAAI,CAAC,EAAE9C,KAAK,KAAK;cAClC,MAAM+C,OAAO,GAAGhC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACiC,GAAG,CAAC,GAAGF,IAAI,CAACJ,KAAK,CAAC,CAAC;cACnD,MAAMO,OAAO,GAAGlC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACmC,GAAG,CAAC,GAAGJ,IAAI,CAACJ,KAAK,CAAC,CAAC;cACnD,MAAMpD,IAAI,GAAGwD,IAAI,CAACH,KAAK,CAAC5B,IAAI,CAACoC,KAAK,CAACL,IAAI,CAACH,KAAK,CAACS,MAAM,GAAG,CAAC,CAAC,CAAC,IAAIN,IAAI,CAACH,KAAK,CAAC,CAAC,CAAC;cAC3E,oBACEnG,OAAA;gBAAiBsE,SAAS,EAAC,YAAY;gBAAAN,QAAA,gBACrChE,OAAA;kBAAAgE,QAAA,EAAOqC;gBAAG;kBAAAnC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAClBrE,OAAA;kBAAK2E,GAAG,EAAE9B,UAAU,CAACC,IAAI,CAAE;kBAAC+B,GAAG,EAAC;gBAAc;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACjDrE,OAAA;kBAAKsE,SAAS,EAAC,YAAY;kBAAAN,QAAA,gBAAChE,OAAA;oBAAAgE,QAAA,GAAOyC,OAAO,EAAC,MAAC;kBAAA;oBAAAvC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAAArE,OAAA;oBAAAgE,QAAA,GAAOuC,OAAO,EAAC,MAAC;kBAAA;oBAAArC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA,GAHxEb,KAAK;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAIV,CAAC;YAEV,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,eACN,CACH;MACH;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,oBACErE,OAAA;IAAKsE,SAAS,EAAC,mBAAmB;IAAAN,QAAA,GAC/BpD,OAAO,iBAAIZ,OAAA;MAAAgE,QAAA,EAAG;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACxCvD,KAAK,iBAAId,OAAA;MAAGsE,SAAS,EAAC,eAAe;MAAAN,QAAA,EAAElD;IAAK;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjD,CAACzD,OAAO,IAAI,CAACE,KAAK,IAAIN,WAAW,iBAChCR,OAAA,CAACJ,eAAe;MAACmD,SAAS,EAAEA,SAAU;MAAAiB,QAAA,eACpChE,OAAA,CAACH,SAAS;QAACgH,WAAW,EAAC,eAAe;QAAA7C,QAAA,EAClC8C,QAAQ,iBACR9G,OAAA;UAAA,GAAS8G,QAAQ,CAACC,cAAc;UAAEC,GAAG,EAAEF,QAAQ,CAACG,QAAS;UAAC3C,SAAS,EAAC,cAAc;UAAAN,QAAA,GAC/EhD,KAAK,CAACkG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC5F,KAAK,GAAG6F,CAAC,CAAC7F,KAAK,CAAC,CAACmC,GAAG,CAAC,CAAC2D,IAAI,EAAE7D,KAAK,kBACvDxD,OAAA,CAACF,SAAS;YAAewH,WAAW,EAAED,IAAI,CAAC/F,EAAG;YAACkC,KAAK,EAAEA,KAAM;YAAAQ,QAAA,EACxD8C,QAAQ,iBACR9G,OAAA;cACEgH,GAAG,EAAEF,QAAQ,CAACG,QAAS;cAAA,GACnBH,QAAQ,CAACS,cAAc;cAAA,GACvBT,QAAQ,CAACU,eAAe;cAC5BlD,SAAS,EAAE,gBAAgB+C,IAAI,CAAC/F,EAAE,KAAK,MAAM,GAAG,cAAc,GAAG,EAAE,EAAG;cAAA0C,QAAA,EAErEF,iBAAiB,CAACuD,IAAI,CAAC/F,EAAE;YAAC;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB;UACN,GAVagD,IAAI,CAAC/F,EAAE;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWZ,CACZ,CAAC,EACDyC,QAAQ,CAACW,WAAW;QAAA;UAAAvD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAClB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChE,EAAA,CA/KID,OAAO;AAAAsH,EAAA,GAAPtH,OAAO;AAiLb,eAAeA,OAAO;AAAC,IAAAsH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}