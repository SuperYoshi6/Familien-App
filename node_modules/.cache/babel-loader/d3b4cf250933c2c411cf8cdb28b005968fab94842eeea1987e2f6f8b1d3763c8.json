{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jan\\\\Downloads\\\\Familien App\\\\src\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './Weather.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = '24361fb4ffda79fd4239dc33a5697d7c';\nconst Weather = () => {\n  _s();\n  const [city, setCity] = useState(localStorage.getItem('weather_city') || 'Berlin');\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [cards, setCards] = useState(JSON.parse(localStorage.getItem('weather_cards')) || [{\n    id: 'main',\n    order: 0,\n    content: null\n  }, {\n    id: 'hourly',\n    order: 1,\n    content: null\n  }, {\n    id: 'details',\n    order: 2,\n    content: null\n  }, {\n    id: 'daily',\n    order: 3,\n    content: null\n  }]);\n  const fetchWeatherData = useCallback(async selectedCity => {\n    setLoading(true);\n    setError(null);\n    try {\n      const weatherResponse = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${selectedCity}&appid=${API_KEY}&units=metric&lang=de`);\n      if (!weatherResponse.ok) throw new Error('Wetterdaten konnten nicht geladen werden.');\n      const current = await weatherResponse.json();\n      setWeatherData(current);\n      const forecastResponse = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${selectedCity}&appid=${API_KEY}&units=metric&lang=de`);\n      if (!forecastResponse.ok) throw new Error('Vorhersagedaten konnten nicht geladen werden.');\n      const forecast = await forecastResponse.json();\n      setForecastData(forecast);\n      localStorage.setItem('weather_city', selectedCity);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchWeatherData(city);\n  }, [city, fetchWeatherData]);\n  const getIconUrl = icon => `http://openweathermap.org/img/wn/${icon}@2x.png`;\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const items = Array.from(cards);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    const updatedCards = items.map((item, index) => ({\n      ...item,\n      order: index\n    }));\n    setCards(updatedCards);\n    localStorage.setItem('weather_cards', JSON.stringify(updatedCards));\n  };\n  const renderCardContent = cardId => {\n    switch (cardId) {\n      case 'main':\n        return weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: weatherData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"temperature\",\n            children: [Math.round(weatherData.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-weather-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: getIconUrl(weatherData.weather[0].icon),\n              alt: weatherData.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: weatherData.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Gef\\xFChlt wie: \", Math.round(weatherData.main.feels_like), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Max: \", Math.round(weatherData.main.temp_max), \"\\xB0C / Min: \", Math.round(weatherData.main.temp_min), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'hourly':\n        return forecastData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"St\\xFCndliche Vorhersage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hourly-items\",\n            children: forecastData.list.slice(0, 8).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hourly-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [new Date(item.dt * 1000).getHours(), \":00\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: getIconUrl(item.weather[0].icon),\n                alt: item.weather[0].description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [Math.round(item.main.temp), \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'details':\n        return weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Luftfeuchtigkeit: \", weatherData.main.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind: \", weatherData.wind.speed, \" m/s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Luftdruck: \", weatherData.main.pressure, \" hPa\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'daily':\n        return forecastData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"5-Tage-Vorschau\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"daily-items\",\n            children: Object.entries(forecastData.list.reduce((acc, item) => {\n              const date = new Date(item.dt * 1000).toLocaleDateString('de-DE', {\n                weekday: 'short'\n              });\n              if (!acc[date]) acc[date] = {\n                temps: [],\n                icons: []\n              };\n              acc[date].temps.push(item.main.temp);\n              acc[date].icons.push(item.weather[0].icon);\n              return acc;\n            }, {})).map(([day, data], index) => {\n              const minTemp = Math.round(Math.min(...data.temps));\n              const maxTemp = Math.round(Math.max(...data.temps));\n              const icon = data.icons[Math.floor(data.icons.length / 2)] || data.icons[0];\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"daily-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: day\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: getIconUrl(icon),\n                  alt: \"weather icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"temp-range\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [maxTemp, \"\\xB0\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [minTemp, \"\\xB0\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-search\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: city,\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            setCity(e.target.value);\n          }\n        },\n        placeholder: \"Stadt suchen...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Wetter wird geladen...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this), !loading && !error && weatherData && /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"weather-cards\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: \"weather-grid\",\n          children: [cards.sort((a, b) => a.order - b.order).map((card, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: card.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              className: `weather-card ${card.id === 'main' ? 'main-weather' : ''}`,\n              children: renderCardContent(card.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 23\n            }, this)\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"XLFu3OE0O73nl6BtolPPeWL57HI=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","Weather","_s","city","setCity","localStorage","getItem","weatherData","setWeatherData","forecastData","setForecastData","loading","setLoading","error","setError","cards","setCards","JSON","parse","id","order","content","fetchWeatherData","selectedCity","weatherResponse","fetch","ok","Error","current","json","forecastResponse","forecast","setItem","err","message","getIconUrl","icon","onDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","updatedCards","map","item","stringify","renderCardContent","cardId","children","name","fileName","_jsxFileName","lineNumber","columnNumber","className","Math","round","main","temp","src","weather","alt","description","feels_like","temp_max","temp_min","list","slice","Date","dt","getHours","humidity","wind","speed","pressure","Object","entries","reduce","acc","date","toLocaleDateString","weekday","temps","icons","push","day","data","minTemp","min","maxTemp","max","floor","length","type","defaultValue","onKeyDown","e","key","target","value","placeholder","droppableId","provided","droppableProps","ref","innerRef","sort","a","b","card","draggableId","draggableProps","dragHandleProps","_c","$RefreshReg$"],"sources":["C:/Users/Jan/Downloads/Familien App/src/Weather.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './Weather.css';\n\nconst API_KEY = '24361fb4ffda79fd4239dc33a5697d7c';\n\nconst Weather = () => {\n  const [city, setCity] = useState(localStorage.getItem('weather_city') || 'Berlin');\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [cards, setCards] = useState(JSON.parse(localStorage.getItem('weather_cards')) || [\n    { id: 'main', order: 0, content: null },\n    { id: 'hourly', order: 1, content: null },\n    { id: 'details', order: 2, content: null },\n    { id: 'daily', order: 3, content: null },\n  ]);\n\n  const fetchWeatherData = useCallback(async (selectedCity) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const weatherResponse = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${selectedCity}&appid=${API_KEY}&units=metric&lang=de`);\n      if (!weatherResponse.ok) throw new Error('Wetterdaten konnten nicht geladen werden.');\n      const current = await weatherResponse.json();\n      setWeatherData(current);\n\n      const forecastResponse = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${selectedCity}&appid=${API_KEY}&units=metric&lang=de`);\n      if (!forecastResponse.ok) throw new Error('Vorhersagedaten konnten nicht geladen werden.');\n      const forecast = await forecastResponse.json();\n      setForecastData(forecast);\n\n      localStorage.setItem('weather_city', selectedCity);\n\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchWeatherData(city);\n  }, [city, fetchWeatherData]);\n\n  const getIconUrl = (icon) => `http://openweathermap.org/img/wn/${icon}@2x.png`;\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n    const items = Array.from(cards);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    \n    const updatedCards = items.map((item, index) => ({ ...item, order: index }));\n    setCards(updatedCards);\n    localStorage.setItem('weather_cards', JSON.stringify(updatedCards));\n  };\n\n  const renderCardContent = (cardId) => {\n    switch (cardId) {\n      case 'main':\n        return weatherData && (\n          <>\n            <h2>{weatherData.name}</h2>\n            <p className=\"temperature\">{Math.round(weatherData.main.temp)}°C</p>\n            <div className=\"main-weather-details\">\n              <img src={getIconUrl(weatherData.weather[0].icon)} alt={weatherData.weather[0].description} />\n              <p>{weatherData.weather[0].description}</p>\n            </div>\n            <p>Gefühlt wie: {Math.round(weatherData.main.feels_like)}°C</p>\n            <p>Max: {Math.round(weatherData.main.temp_max)}°C / Min: {Math.round(weatherData.main.temp_min)}°C</p>\n          </>\n        );\n      case 'hourly':\n        return forecastData && (\n          <>\n            <h3>Stündliche Vorhersage</h3>\n            <div className=\"hourly-items\">\n              {forecastData.list.slice(0, 8).map((item, index) => (\n                <div key={index} className=\"hourly-item\">\n                  <span>{new Date(item.dt * 1000).getHours()}:00</span>\n                  <img src={getIconUrl(item.weather[0].icon)} alt={item.weather[0].description} />\n                  <span>{Math.round(item.main.temp)}°C</span>\n                </div>\n              ))}\n            </div>\n          </>\n        );\n      case 'details':\n        return weatherData && (\n          <>\n            <h3>Details</h3>\n            <p>Luftfeuchtigkeit: {weatherData.main.humidity}%</p>\n            <p>Wind: {weatherData.wind.speed} m/s</p>\n            <p>Luftdruck: {weatherData.main.pressure} hPa</p>\n          </>\n        );\n      case 'daily':\n        return forecastData && (\n          <>\n            <h3>5-Tage-Vorschau</h3>\n            <div className=\"daily-items\">\n              {Object.entries(forecastData.list.reduce((acc, item) => {\n                const date = new Date(item.dt * 1000).toLocaleDateString('de-DE', { weekday: 'short' });\n                if (!acc[date]) acc[date] = { temps: [], icons: [] };\n                acc[date].temps.push(item.main.temp);\n                acc[date].icons.push(item.weather[0].icon);\n                return acc;\n              }, {})).map(([day, data], index) => {\n                const minTemp = Math.round(Math.min(...data.temps));\n                const maxTemp = Math.round(Math.max(...data.temps));\n                const icon = data.icons[Math.floor(data.icons.length / 2)] || data.icons[0];\n                return (\n                  <div key={index} className=\"daily-item\">\n                    <span>{day}</span>\n                    <img src={getIconUrl(icon)} alt=\"weather icon\" />\n                    <div className=\"temp-range\"><span>{maxTemp}°</span><span>{minTemp}°</span></div>\n                  </div>\n                );\n              })}\n            </div>\n          </>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"weather-container\">\n      <div className=\"city-search\">\n        <input \n          type=\"text\" \n          defaultValue={city}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              setCity(e.target.value);\n            }\n          }}\n          placeholder=\"Stadt suchen...\"\n        />\n      </div>\n\n      {loading && <p>Wetter wird geladen...</p>}\n      {error && <p className=\"error-message\">{error}</p>}\n      {!loading && !error && weatherData && (\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"weather-cards\">\n            {(provided) => (\n              <div {...provided.droppableProps} ref={provided.innerRef} className=\"weather-grid\">\n                {cards.sort((a, b) => a.order - b.order).map((card, index) => (\n                  <Draggable key={card.id} draggableId={card.id} index={index}>\n                    {(provided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        className={`weather-card ${card.id === 'main' ? 'main-weather' : ''}`}\n                      >\n                        {renderCardContent(card.id)}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      )}\n    </div>\n  );\n};\n\nexport default Weather;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}