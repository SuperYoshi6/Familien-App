{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jan\\\\Downloads\\\\Familien App\\\\src\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { supabase } from './supabaseClient';\nimport './AdminPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminPanel() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editingUser, setEditingUser] = useState(null);\n  const [newPassword, setNewPassword] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const fetchUsers = useCallback(async () => {\n    setLoading(true);\n    const {\n      data,\n      error\n    } = await supabase.from('users').select('id, name, is_admin').order('name', {\n      ascending: true\n    });\n    if (error) {\n      setError('Fehler beim Laden der Benutzer.');\n      setUsers([]);\n    } else {\n      setUsers(data);\n    }\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    if (!editingUser || !newPassword) return;\n    const {\n      error\n    } = await supabase.from('users').update({\n      password: newPassword\n    }).eq('id', editingUser.id);\n    if (error) {\n      setError('Fehler beim Zurücksetzen des Passworts.');\n      setSuccessMessage('');\n    } else {\n      setSuccessMessage(`Passwort für ${editingUser.name} wurde erfolgreich geändert.`);\n      setEditingUser(null);\n      setNewPassword('');\n      setError(null);\n    }\n  };\n  const startEditing = user => {\n    setEditingUser(user);\n    setNewPassword('');\n    setError(null);\n    setSuccessMessage('');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Lade Benutzerliste...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Benutzerverwaltung\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"user-list\",\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"user-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-name\",\n          children: [user.name, \" \", user.is_admin && '(Admin)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startEditing(user),\n          disabled: user.is_admin,\n          children: \"Passwort zur\\xFCcksetzen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), editingUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-reset-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Passwort f\\xFCr \", editingUser.name, \" \\xE4ndern\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePasswordReset,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Neues Passwort\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setEditingUser(null),\n            children: \"Abbrechen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Speichern\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"+0R8OkEDIqmqgbfshxnsIsqc+Cw=\");\n_c = AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","supabase","jsxDEV","_jsxDEV","AdminPanel","_s","users","setUsers","loading","setLoading","error","setError","editingUser","setEditingUser","newPassword","setNewPassword","successMessage","setSuccessMessage","fetchUsers","data","from","select","order","ascending","handlePasswordReset","e","preventDefault","update","password","eq","id","name","startEditing","user","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","is_admin","onClick","disabled","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Jan/Downloads/Familien App/src/AdminPanel.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { supabase } from './supabaseClient';\nimport './AdminPanel.css';\n\nexport default function AdminPanel() {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editingUser, setEditingUser] = useState(null);\n  const [newPassword, setNewPassword] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const fetchUsers = useCallback(async () => {\n    setLoading(true);\n    const { data, error } = await supabase\n      .from('users')\n      .select('id, name, is_admin')\n      .order('name', { ascending: true });\n\n    if (error) {\n      setError('Fehler beim Laden der Benutzer.');\n      setUsers([]);\n    } else {\n      setUsers(data);\n    }\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  const handlePasswordReset = async (e) => {\n    e.preventDefault();\n    if (!editingUser || !newPassword) return;\n\n    const { error } = await supabase\n      .from('users')\n      .update({ password: newPassword })\n      .eq('id', editingUser.id);\n\n    if (error) {\n      setError('Fehler beim Zurücksetzen des Passworts.');\n      setSuccessMessage('');\n    } else {\n      setSuccessMessage(`Passwort für ${editingUser.name} wurde erfolgreich geändert.`);\n      setEditingUser(null);\n      setNewPassword('');\n      setError(null);\n    }\n  };\n\n  const startEditing = (user) => {\n    setEditingUser(user);\n    setNewPassword('');\n    setError(null);\n    setSuccessMessage('');\n  };\n\n  if (loading) {\n    return <p>Lade Benutzerliste...</p>;\n  }\n\n  if (error) {\n    return <p className=\"error-message\">{error}</p>;\n  }\n\n  return (\n    <div className=\"admin-panel-container\">\n      <h2>Benutzerverwaltung</h2>\n      {successMessage && <p className=\"success-message\">{successMessage}</p>}\n      <ul className=\"user-list\">\n        {users.map(user => (\n          <li key={user.id} className=\"user-item\">\n            <span className=\"user-name\">{user.name} {user.is_admin && '(Admin)'}</span>\n            <button onClick={() => startEditing(user)} disabled={user.is_admin}>\n              Passwort zurücksetzen\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      {editingUser && (\n        <div className=\"password-reset-form\">\n          <h3>Passwort für {editingUser.name} ändern</h3>\n          <form onSubmit={handlePasswordReset}>\n            <input\n              type=\"text\"\n              placeholder=\"Neues Passwort\"\n              value={newPassword}\n              onChange={(e) => setNewPassword(e.target.value)}\n              required\n            />\n            <div className=\"form-actions\">\n              <button type=\"button\" onClick={() => setEditingUser(null)}>Abbrechen</button>\n              <button type=\"submit\">Speichern</button>\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}